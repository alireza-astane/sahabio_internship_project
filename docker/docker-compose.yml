version: '3.8'
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: sahab
      POSTGRES_USER: sahab
      POSTGRES_PASSWORD: sahab
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sahab"]
      interval: 3s
      timeout: 3s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.4
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  api:
    build:
      context: ..
      dockerfile: api/Dockerfile
    command: >
          sh -c "python manage.py makemigrations && python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ../api:/app
      - logs_data:/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy



    

  crawler:
    build:
      context: ..
      dockerfile: crawler/Dockerfile
    command: python main.py
    volumes:
      - ../crawler:/app
      - logs_data:/logs
    depends_on:
      - api
      - kafka
    restart: on-failure
  

  consumer:
    build:
      context: ..
      dockerfile: consumer/Dockerfile
    command: python main.py
    volumes:
      - ../consumer:/app
      - logs_data:/logs
    depends_on:
      - db
      - kafka


  metabase:
    image: metabase/metabase:latest
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: sahab
      MB_DB_PORT: 5432
      MB_DB_USER: sahab
      MB_DB_PASS: sahab
      MB_DB_HOST: db
    depends_on:
      - db

  airflow:
    image: apache/airflow:2.7.0
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://sahab:sahab@db:5432/sahab
      AIRFLOW__CORE__FERNET_KEY: q_oMVrOGCZ1-lFqv9xmmQRp7eLUYcwUl72H2v0-IasQ=
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: 1zbsvfqk74637S2LnVYkHctCMjEnDiQEPdH7p6UgFUg

    ports:
      - "8080:8080"
    depends_on:
      - db
    volumes:
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
      - ../airflow/plugins:/opt/airflow/plugins
      - logs_data:/logs


  log_collector:
    build:
      context: ../log_collector
      dockerfile: Dockerfile
    volumes:
      - logs_data:/logs
      - /var/run/docker.sock:/var/run/docker.sock  # Needed for Docker API access
    depends_on:
      - api
      - crawler
      - consumer
      - kafka
      - zookeeper
      - airflow
      - metabase

volumes:
  db_data:
  logs_data: